<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 23:41:43 on 12/ 6/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c5_t1_hit_detector.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - Minh.UNKNOWN (DESKTOP-R6EVFEE)</span>
<span class=C>--          at - 21:14:29 12&#47; 6&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c5_t1_hit_detector <span class=K>IS</span>
   <span class=K>PORT</span>(
      alien_x  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      alien_y  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      btn      : <span class=A>IN</span>     <span class=T>std_logic</span>;
      bullet_x : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_y : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      clk      : <span class=A>IN</span>     <span class=T>std_logic</span>;
      gun_x    : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      mode_in  : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n    : <span class=A>IN</span>     <span class=T>std_logic</span>;
      hit      : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c5_t1_hit_detector ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c5_t1_hit_detector.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - Minh.UNKNOWN (DESKTOP-R6EVFEE)</span>
<span class=C>--          at - 21:14:29 12&#47; 6&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c5_t1_hit_detector <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> din1   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> q      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> r_out  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> r_out1 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> r_out2 : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_5' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_5reg_cval : <span class=T>std_logic</span>;

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c5_t1_8_bit_comparator
   <span class=K>PORT</span> (
      a_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      b_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      r_out : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c5_t1_8_bit_comparator <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c5_t1_8_bit_comparator;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'adff'</span>
   q <= mw_U_5reg_cval;
   u_5seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_5reg_cval <= '0';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_5reg_cval <= dout2;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_5seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'and'</span>
   dout <= r_out1 <span class=K>AND</span> r_out2;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'and'</span>
   dout2 <= dout1 <span class=K>AND</span> btn;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'constval'</span>
   din1 <= '0';

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'mux'</span>
   u_0combo_proc: <span class=K>PROCESS</span>(r_out, dout, mode_in)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> mode_in <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout1 <= r_out;
      <span class=K>WHEN</span> '1' => dout1 <= dout;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout1 <= 'X';
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'mux'</span>
   u_7combo_proc: <span class=K>PROCESS</span>(dout2, din1, q)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> q <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => hit <= dout2;
      <span class=K>WHEN</span> '1' => hit <= din1;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => hit <= 'X';
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_7combo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_1 : c5_t1_8_bit_comparator
      <span class=K>PORT</span> <span class=K>MAP</span> (
         a_in  => alien_x,
         b_in  => gun_x,
         r_out => r_out
      );
   U_2 : c5_t1_8_bit_comparator
      <span class=K>PORT</span> <span class=K>MAP</span> (
         a_in  => bullet_x,
         b_in  => alien_x,
         r_out => r_out1
      );
   U_3 : c5_t1_8_bit_comparator
      <span class=K>PORT</span> <span class=K>MAP</span> (
         a_in  => bullet_y,
         b_in  => alien_y,
         r_out => r_out2
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
