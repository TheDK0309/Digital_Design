<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 23:41:40 on 12/ 6/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c3_t2_bullet.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - Minh.UNKNOWN (DESKTOP-R6EVFEE)</span>
<span class=C>--          at - 22:30:55 10&#47; 8&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c3_t2_bullet <span class=K>IS</span>
   <span class=K>PORT</span>(
      Gun_X_coord    : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      btn            : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk            : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable         : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n          : <span class=A>IN</span>     <span class=T>std_logic</span>;
      Bullet_X_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      Bullet_Y_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      Color          : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c3_t2_bullet ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c3_t2_bullet.fsm</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - Minh.UNKNOWN (DESKTOP-R6EVFEE)</span>
<span class=C>--          at - 11:50:34 11&#47;11&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ARCHITECTURE</span> fsm <span class=K>OF</span> c3_t2_bullet <span class=K>IS</span>

   <span class=K>TYPE</span> STATE_TYPE <span class=K>IS</span> (
      Idle,
      Bullet_flying1,
      Bullet_flying2,
      Bullet_flying3,
      Bullet_flying4,
      Bullet_flying5,
      Bullet_flying6
   );

   <span class=C>-- Declare current and next state signals</span>
   <span class=K>SIGNAL</span> current_state : STATE_TYPE;
   <span class=K>SIGNAL</span> next_state : STATE_TYPE;

<span class=K>BEGIN</span>

   <span class=C>-----------------------------------------------------------------</span>
   clocked_proc : <span class=K>PROCESS</span> (
      clk
   )
   <span class=C>-----------------------------------------------------------------</span>
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk = '1') <span class=K>THEN</span>
         <span class=K>IF</span> (enable = '1') <span class=K>THEN</span>
            <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
               current_state <= Idle;
            <span class=K>ELSE</span>
               current_state <= next_state;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>END</span> <span class=K>IF</span>;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> clocked_proc;

   <span class=C>-----------------------------------------------------------------</span>
   nextstate_proc : <span class=K>PROCESS</span> (
      btn,
      current_state,
      enable
   )
   <span class=C>-----------------------------------------------------------------</span>
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> current_state <span class=K>IS</span>
         <span class=K>WHEN</span> Idle =>
            <span class=K>IF</span> (btn(0) = '1') <span class=K>THEN</span>
               next_state <= Bullet_flying1;
            <span class=K>ELSIF</span> (btn(0) = '0') <span class=K>THEN</span>
               next_state <= Idle;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> Bullet_flying1 =>
            <span class=K>IF</span> (enable = '1') <span class=K>THEN</span>
               next_state <= Bullet_flying2;
            <span class=K>ELSIF</span> (enable = '0') <span class=K>THEN</span>
               next_state <= Bullet_flying1;
            <span class=K>ELSE</span>
               next_state <= Bullet_flying1;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> Bullet_flying2 =>
            <span class=K>IF</span> (enable = '1') <span class=K>THEN</span>
               next_state <= Bullet_flying3;
            <span class=K>ELSIF</span> (enable = '0') <span class=K>THEN</span>
               next_state <= Bullet_flying2;
            <span class=K>ELSE</span>
               next_state <= Bullet_flying2;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> Bullet_flying3 =>
            <span class=K>IF</span> (enable = '1') <span class=K>THEN</span>
               next_state <= Bullet_flying4;
            <span class=K>ELSIF</span> (enable = '0') <span class=K>THEN</span>
               next_state <= Bullet_flying3;
            <span class=K>ELSE</span>
               next_state <= Bullet_flying3;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> Bullet_flying4 =>
            <span class=K>IF</span> (enable = '1') <span class=K>THEN</span>
               next_state <= Bullet_flying5;
            <span class=K>ELSIF</span> (enable = '0') <span class=K>THEN</span>
               next_state <= Bullet_flying4;
            <span class=K>ELSE</span>
               next_state <= Bullet_flying4;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> Bullet_flying5 =>
            <span class=K>IF</span> (enable = '1') <span class=K>THEN</span>
               next_state <= Bullet_flying6;
            <span class=K>ELSIF</span> (enable = '0') <span class=K>THEN</span>
               next_state <= Bullet_flying5;
            <span class=K>ELSE</span>
               next_state <= Bullet_flying5;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> Bullet_flying6 =>
            <span class=K>IF</span> (enable = '1') <span class=K>THEN</span>
               next_state <= Idle;
            <span class=K>ELSIF</span> (btn(2) = '1' <span class=K>AND</span> enable = '1') <span class=K>THEN</span>
               next_state <= Bullet_flying1;
            <span class=K>ELSIF</span> (enable = '0') <span class=K>THEN</span>
               next_state <= Bullet_flying6;
            <span class=K>ELSE</span>
               next_state <= Bullet_flying6;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> <span class=K>OTHERS</span> =>
            next_state <= Idle;
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> nextstate_proc;

   <span class=C>-----------------------------------------------------------------</span>
   output_proc : <span class=K>PROCESS</span> (
      Gun_X_coord,
      current_state
   )
   <span class=C>-----------------------------------------------------------------</span>
   <span class=K>BEGIN</span>

      <span class=C>-- Combined Actions</span>
      <span class=K>CASE</span> current_state <span class=K>IS</span>
         <span class=K>WHEN</span> Idle =>
            Bullet_X_coord <= Gun_X_coord;
            Bullet_Y_coord <= <span class=S>"01000000"</span>;
            Color <= x<span class=S>"808080"</span>;
         <span class=K>WHEN</span> Bullet_flying1 =>
            Bullet_Y_coord <= <span class=S>"00100000"</span>;
            Color <= x<span class=S>"808080"</span>;
         <span class=K>WHEN</span> Bullet_flying2 =>
            Bullet_Y_coord <= <span class=S>"00010000"</span>;
            Color <= x<span class=S>"808080"</span>;
         <span class=K>WHEN</span> Bullet_flying3 =>
            Bullet_Y_coord <= <span class=S>"00001000"</span>;
            Color <= x<span class=S>"808080"</span>;
         <span class=K>WHEN</span> Bullet_flying4 =>
            Bullet_Y_coord <= <span class=S>"00000100"</span>;
            Color <= x<span class=S>"808080"</span>;
         <span class=K>WHEN</span> Bullet_flying5 =>
            Bullet_Y_coord <= <span class=S>"00000010"</span>;
            Color <= x<span class=S>"808080"</span>;
         <span class=K>WHEN</span> Bullet_flying6 =>
            Bullet_Y_coord <= <span class=S>"00000001"</span>;
            Color <= x<span class=S>"808080"</span>;
         <span class=K>WHEN</span> <span class=K>OTHERS</span> =>
            <span class=K>NULL</span>;
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> output_proc;

<span class=K>END</span> fsm;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
