<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 23:41:41 on 12/ 6/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c5_t1_8_bit_comparator.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - Minh.UNKNOWN (DESKTOP-R6EVFEE)</span>
<span class=C>--          at - 16:09:13 11&#47;10&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c5_t1_8_bit_comparator <span class=K>IS</span>
   <span class=K>PORT</span>(
      a_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      b_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      r_out : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c5_t1_8_bit_comparator ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c5_t1_8_bit_comparator.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - Minh.UNKNOWN (DESKTOP-R6EVFEE)</span>
<span class=C>--          at - 16:09:13 11&#47;10&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c5_t1_8_bit_comparator <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> din1   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din2   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din3   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din4   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din5   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din6   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din7   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout10 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout11 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout12 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout13 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout14 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout15 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout16 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout3  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout4  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout5  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout6  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout7  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout8  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout9  : <span class=T>std_logic</span>;



<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_24' of 'and'</span>
   r_out <= dout16 <span class=K>AND</span> din1 <span class=K>AND</span> din2 <span class=K>AND</span> din3 <span class=K>AND</span> din4 <span class=K>AND</span> din5 <span class=K>AND</span> din6
            <span class=K>AND</span> din7;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'inv'</span>
   dout <= <span class=K>NOT</span>(a_in(0));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'inv'</span>
   dout2 <= <span class=K>NOT</span>(a_in(1));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'inv'</span>
   dout4 <= <span class=K>NOT</span>(a_in(2));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'inv'</span>
   dout6 <= <span class=K>NOT</span>(a_in(3));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'inv'</span>
   dout8 <= <span class=K>NOT</span>(a_in(4));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'inv'</span>
   dout10 <= <span class=K>NOT</span>(a_in(5));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'inv'</span>
   dout12 <= <span class=K>NOT</span>(a_in(6));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'inv'</span>
   dout14 <= <span class=K>NOT</span>(a_in(7));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'inv'</span>
   dout1 <= <span class=K>NOT</span>(b_in(0));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_9' of 'inv'</span>
   dout3 <= <span class=K>NOT</span>(b_in(1));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_10' of 'inv'</span>
   dout5 <= <span class=K>NOT</span>(b_in(2));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_11' of 'inv'</span>
   dout7 <= <span class=K>NOT</span>(b_in(3));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_12' of 'inv'</span>
   dout9 <= <span class=K>NOT</span>(b_in(4));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_13' of 'inv'</span>
   dout11 <= <span class=K>NOT</span>(b_in(5));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_14' of 'inv'</span>
   dout13 <= <span class=K>NOT</span>(b_in(6));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_15' of 'inv'</span>
   dout15 <= <span class=K>NOT</span>(b_in(7));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_16' of 'xnor'</span>
   dout16 <= <span class=K>NOT</span>(dout <span class=K>XOR</span> dout1);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_17' of 'xnor'</span>
   din1 <= <span class=K>NOT</span>(dout2 <span class=K>XOR</span> dout3);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_18' of 'xnor'</span>
   din2 <= <span class=K>NOT</span>(dout4 <span class=K>XOR</span> dout5);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_19' of 'xnor'</span>
   din3 <= <span class=K>NOT</span>(dout6 <span class=K>XOR</span> dout7);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_20' of 'xnor'</span>
   din4 <= <span class=K>NOT</span>(dout8 <span class=K>XOR</span> dout9);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_21' of 'xnor'</span>
   din5 <= <span class=K>NOT</span>(dout10 <span class=K>XOR</span> dout11);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_22' of 'xnor'</span>
   din6 <= <span class=K>NOT</span>(dout12 <span class=K>XOR</span> dout13);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_23' of 'xnor'</span>
   din7 <= <span class=K>NOT</span>(dout14 <span class=K>XOR</span> dout15);

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
