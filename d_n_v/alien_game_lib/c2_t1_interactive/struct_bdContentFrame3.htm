<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 23:41:29 on 12/ 6/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c2_t1_interactive.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - vrming.vrming (linux-desktop12.tuni.fi)</span>
<span class=C>--          at - 18:07:40 09&#47;29&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c2_t1_interactive <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn       : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      color_BGR : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      x_coord   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c2_t1_interactive ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c2_t1_interactive.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - vrming.vrming (linux-desktop12.tuni.fi)</span>
<span class=C>--          at - 18:07:40 09&#47;29&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c2_t1_interactive <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> dout   : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout1  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout10 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout11 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout12 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout2  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout3  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout4  : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout5  : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout6  : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout7  : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout9  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);



<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'constval'</span>
   dout4 <= x<span class=S>"FF0000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'constval'</span>
   dout5 <= x<span class=S>"0FF0F0"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'constval'</span>
   dout6 <= x<span class=S>"00FF00"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'constval'</span>
   dout7 <= x<span class=S>"FF0000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'constval'</span>
   dout <= x<span class=S>"01"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'constval'</span>
   dout1 <= x<span class=S>"02"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'constval'</span>
   dout2 <= x<span class=S>"04"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_9' of 'constval'</span>
   dout3 <= x<span class=S>"08"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_12' of 'constval'</span>
   dout9 <= x<span class=S>"03"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_13' of 'constval'</span>
   dout10 <= x<span class=S>"04"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_14' of 'constval'</span>
   dout11 <= x<span class=S>"07"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_15' of 'constval'</span>
   dout12 <= x<span class=S>"30"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'omux'</span>
   u_0combo_proc: <span class=K>PROCESS</span>(dout, dout1, dout2, dout3, btn)
   <span class=K>BEGIN</span>
      x_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>CASE</span> btn <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"0001"</span> => x_coord <= dout;
      <span class=K>WHEN</span> <span class=S>"0010"</span> => x_coord <= dout1;
      <span class=K>WHEN</span> <span class=S>"0100"</span> => x_coord <= dout2;
      <span class=K>WHEN</span> <span class=S>"1000"</span> => x_coord <= dout3;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => x_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'omux'</span>
   u_1combo_proc: <span class=K>PROCESS</span>(dout4, dout5, dout6, dout7, btn)
   <span class=K>BEGIN</span>
      color_BGR <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>IF</span> (btn(0) = '1') <span class=K>THEN</span>
         color_BGR <= dout4;
      <span class=K>ELSIF</span> (btn(1) = '1') <span class=K>THEN</span>
         color_BGR <= dout5;
      <span class=K>ELSIF</span> (btn(2) = '1') <span class=K>THEN</span>
         color_BGR <= dout6;
      <span class=K>ELSIF</span> (btn(3) = '1') <span class=K>THEN</span>
         color_BGR <= dout7;
      <span class=K>ELSE</span>
         color_BGR <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_1combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_11' of 'omux'</span>
   u_11combo_proc: <span class=K>PROCESS</span>(dout9, dout10, dout11, dout12, btn)
   <span class=K>BEGIN</span>
      y_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>CASE</span> btn <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"0001"</span> => y_coord <= dout9;
      <span class=K>WHEN</span> <span class=S>"0010"</span> => y_coord <= dout10;
      <span class=K>WHEN</span> <span class=S>"0100"</span> => y_coord <= dout11;
      <span class=K>WHEN</span> <span class=S>"1000"</span> => y_coord <= dout12;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => y_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_11combo_proc;

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
