<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 23:41:37 on 12/ 6/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c3_t1_gun_module.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - Minh.UNKNOWN (DESKTOP-R6EVFEE)</span>
<span class=C>--          at - 13:12:39 10&#47;10&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c3_t1_gun_module <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn        : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk        : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      gun_px_idx : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      rst_n      : <span class=A>IN</span>     <span class=T>std_logic</span>;
      Gun_color  : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      X_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      Y_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c3_t1_gun_module ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c3_t1_gun_module.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - Minh.UNKNOWN (DESKTOP-R6EVFEE)</span>
<span class=C>--          at - 13:21:06 12&#47; 6&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c3_t1_gun_module <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> dout1       : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout15      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout16      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout3       : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout4       : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> left_shift  : <span class=T>std_logic</span>;                       <span class=C>-- left-shift</span>
   <span class=K>SIGNAL</span> right_shift : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> sel_val     : <span class=T>std_logic_vector</span>(1 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Implicit buffer signal declarations</span>
   <span class=K>SIGNAL</span> X_coord_internal : <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);


   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c3_t1_gun_module_x_coord
   <span class=K>PORT</span> (
      clk        : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      gun_px_idx : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      rst_n      : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      sel_val    : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      X_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c3_t1_gun_module_x_coord <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c3_t1_gun_module_x_coord;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'and'</span>
   left_shift <= <span class=K>NOT</span>(dout15) <span class=K>AND</span> btn(1) <span class=K>AND</span> enable;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_9' of 'and'</span>
   dout3 <= gun_px_idx(0) <span class=K>AND</span> gun_px_idx(1);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_15' of 'and'</span>
   right_shift <= btn(3) <span class=K>AND</span> enable <span class=K>AND</span> <span class=K>NOT</span>(dout16);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'constval'</span>
   dout1 <= x<span class=S>"80"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'constval'</span>
   dout4 <= x<span class=S>"40"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_26' of 'constval'</span>
   Gun_color <= x<span class=S>"808080"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'merge'</span>
   sel_val <= right_shift & left_shift;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_10' of 'mux'</span>
   u_10combo_proc: <span class=K>PROCESS</span>(dout1, dout4, dout3)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> dout3 <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => Y_coord <= dout1;
      <span class=K>WHEN</span> '1' => Y_coord <= dout4;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => Y_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_10combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_28' of 'mux'</span>
   u_28combo_proc: <span class=K>PROCESS</span>(X_coord_internal, gun_px_idx)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> gun_px_idx <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"00"</span> => dout15 <= X_coord_internal(7);
      <span class=K>WHEN</span> <span class=S>"01"</span> => dout15 <= X_coord_internal(6);
      <span class=K>WHEN</span> <span class=S>"10"</span> => dout15 <= X_coord_internal(5);
      <span class=K>WHEN</span> <span class=S>"11"</span> => dout15 <= X_coord_internal(6);
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout15 <= 'X';
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_28combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_29' of 'mux'</span>
   u_29combo_proc: <span class=K>PROCESS</span>(X_coord_internal, gun_px_idx)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> gun_px_idx <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"00"</span> => dout16 <= X_coord_internal(2);
      <span class=K>WHEN</span> <span class=S>"01"</span> => dout16 <= X_coord_internal(1);
      <span class=K>WHEN</span> <span class=S>"10"</span> => dout16 <= X_coord_internal(0);
      <span class=K>WHEN</span> <span class=S>"11"</span> => dout16 <= X_coord_internal(1);
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout16 <= 'X';
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_29combo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_0 : c3_t1_gun_module_x_coord
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk        => clk,
         gun_px_idx => gun_px_idx,
         rst_n      => rst_n,
         sel_val    => sel_val,
         X_coord    => X_coord_internal
      );

   <span class=C>-- Implicit buffered output assignments</span>
   X_coord <= X_coord_internal;

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
