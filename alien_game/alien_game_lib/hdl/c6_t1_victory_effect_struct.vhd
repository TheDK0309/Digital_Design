-- VHDL Entity alien_game_lib.c6_t1_victory_effect.symbol
--
-- Created:
--          by - DELL.UNKNOWN (DESKTOP-3FDMB5C)
--          at - 19:31:25 11/27/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c6_t1_victory_effect IS
   PORT( 
      clk          : IN     std_logic;
      rst_n        : IN     std_logic;
      Color        : OUT    std_logic_vector (23 DOWNTO 0);
      X_coordinate : OUT    std_logic_vector (7 DOWNTO 0);
      Y_coordinate : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c6_t1_victory_effect ;

--
-- VHDL Architecture alien_game_lib.c6_t1_victory_effect.struct
--
-- Created:
--          by - Minh.UNKNOWN (DESKTOP-R6EVFEE)
--          at - 21:03:04 11/29/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c6_t1_victory_effect IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL dout   : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout1  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout2  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout3  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout4  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout5  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout6  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout7  : std_logic_vector(7 DOWNTO 0);
   SIGNAL q      : std_logic_vector(2 DOWNTO 0);
   SIGNAL result : std_logic_vector(2 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'
   SIGNAL mw_U_0reg_cval : std_logic_vector(2 DOWNTO 0);

   -- Component Declarations
   COMPONENT c1_t2_incrementer
   PORT (
      value  : IN     std_logic_vector (2 DOWNTO 0);
      result : OUT    std_logic_vector (2 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c2_t2_bin_to_onehot
   PORT (
      binary_in   : IN     std_logic_vector (2 DOWNTO 0);
      one_hot_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c1_t2_incrementer USE ENTITY alien_game_lib.c1_t2_incrementer;
   FOR ALL : c2_t2_bin_to_onehot USE ENTITY alien_game_lib.c2_t2_bin_to_onehot;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_0' of 'adff'
   q <= mw_U_0reg_cval;
   u_0seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_0reg_cval <= "000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_0reg_cval <= result;
      END IF;
   END PROCESS u_0seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_1' of 'constval'
   Color <= x"00FF00";

   -- ModuleWare code(v1.12) for instance 'U_4' of 'constval'
   dout1 <= "01001010";

   -- ModuleWare code(v1.12) for instance 'U_5' of 'constval'
   dout2 <= "11110101";

   -- ModuleWare code(v1.12) for instance 'U_6' of 'constval'
   dout3 <= "00100001";

   -- ModuleWare code(v1.12) for instance 'U_7' of 'constval'
   dout <= "00111100";

   -- ModuleWare code(v1.12) for instance 'U_9' of 'constval'
   dout4 <= "00100001";

   -- ModuleWare code(v1.12) for instance 'U_10' of 'constval'
   dout5 <= "11110101";

   -- ModuleWare code(v1.12) for instance 'U_11' of 'constval'
   dout6 <= "01001010";

   -- ModuleWare code(v1.12) for instance 'U_12' of 'constval'
   dout7 <= "11111100";

   -- ModuleWare code(v1.12) for instance 'U_8' of 'mux'
   u_8combo_proc: PROCESS(dout, dout1, dout2, dout3, dout4, dout5, dout6, 
                          dout7, q)
   BEGIN
      CASE q IS
      WHEN "000" => Y_coordinate <= dout;
      WHEN "001" => Y_coordinate <= dout1;
      WHEN "010" => Y_coordinate <= dout2;
      WHEN "011" => Y_coordinate <= dout3;
      WHEN "100" => Y_coordinate <= dout4;
      WHEN "101" => Y_coordinate <= dout5;
      WHEN "110" => Y_coordinate <= dout6;
      WHEN "111" => Y_coordinate <= dout7;
      WHEN OTHERS => Y_coordinate <= (OTHERS => '0');
      END CASE;
   END PROCESS u_8combo_proc;

   -- Instance port mappings.
   U_3 : c1_t2_incrementer
      PORT MAP (
         value  => q,
         result => result
      );
   U_2 : c2_t2_bin_to_onehot
      PORT MAP (
         binary_in   => q,
         one_hot_out => X_coordinate
      );

END struct;
